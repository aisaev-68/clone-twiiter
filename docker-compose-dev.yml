version: '3.8'
services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - postgres
    restart: always
#    command: bash -c "
#      uvicorn app.main:app
#      --host 0.0.0.0
#      --port 8080
#      --reload
#      "
#      --lifespan=on --use-colors --loop uvloop --http httptools alembic upgrade head &&
#      --reload --log-level debug
#      "
    volumes:
      - ./app:/code/app
      - ./tests:/code/tests
      - ./migrations:/code/migrations
    networks:
      - net


  nginx:
    container_name: nginx
    restart: always
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./app/static:/www/data/static
      - ./app/images:/www/data/images
    networks:
      - net
    depends_on:
      - fastapi

  postgres:
    image: postgres:13-alpine
    restart: always
    container_name: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./db_test:/var/lib/postgresql/data
    networks:
      - net
    ports:
      - 5432:5432
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}"
#        ]
#      interval: 5s
#      timeout: 5s
#      retries: 5

#  pgadmin:
#    container_name: pgadmin4
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
#    ports:
#      - "15050:80"
#    volumes:
#      - pgadmin_data:/data/pgadmin
#    networks:
#      - net
#
#volumes:
#  db_data:


networks:
  net:

