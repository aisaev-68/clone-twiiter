version: '3.8'
services:
  fastapi:
    build: .
    depends_on:
      - postgres
    restart: always
    volumes:
      - ".:/app/"
#    ports:
#        - "8080:8080"
    networks:
      - db_network
      - web_network


  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - "8080:80"
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
      - "./app/static:/www/data/static"
      - "./app/images:/www/data/images"
    networks:
      - web_network
    depends_on:
      - fastapi

  postgres:
    image: "postgres"
    restart: always
    container_name: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - "./app/db-data:/var/lib/postgresql/data"
    networks:
      - db_network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

#  pgadmin:
#    container_name: pgadmin4
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
#    ports:
#      - "15050:80"
#    volumes:
#      - pgadmin_data:/data/pgadmin


networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge